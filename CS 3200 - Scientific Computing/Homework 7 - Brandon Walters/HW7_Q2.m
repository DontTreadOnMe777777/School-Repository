xArray = [400:1:600];
xArrayItr = 1;
finalRootsX1 = zeros(1,201);
finalRootsX2 = zeros(1,201);

for x = xArray
    % Simple Newton in 2D Example 
    x = [x,x]'; %starting guess
    f = [0.0, 0.0]';
    n = 25;
    for i = 1:n                            %fixed number of iterations 
        f = [(x(1)^2/34596 - x(2)^2/55404 - 1) ((x(2)-500)^2/77841 - (x(1)-300)^2/172159 - 1)]';  %function to be zero
        J = [x(1)/17298  -x(2)/27702; -2*(x(1)-300)/172159  2*(x(2)-500)/77841];       %Jacobian matrix
        x = x - J\f;                          %Newton iteration 
    end
    fprintf('x1=%8.2e x2=%8.2e f1 %8.2e f2=%8.2e\n',x(1),x(2),f(1),f(2))
    finalRootsX1(xArrayItr) = x(1); % Save convergences of both x1 and x2
    finalRootsX2(xArrayItr) = x(2);
    xArrayItr = xArrayItr + 1;
end

% Plot final convergences
plot(xArray, finalRootsX1, xArray, finalRootsX2);
legend("x1 Roots", "x2 Roots");
title("LORAN roots generated by Newton");